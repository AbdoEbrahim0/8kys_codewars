#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <cassert>
#include <string>
#include <algorithm>
#include <cstring>
#include <stdio.h>
#include <vector>
#include <regex>
#include <string>
#include <numeric>
#include <stdlib.h>
#include <map>
#include <numeric>
#include<sstream>

using namespace std;
//method 1:

// std::string countSheep(int number) {
//   string s="";
//   //start from 1 =49 (hexa)
//   for (int i=1;i<=number;i++)
//   {
//   s+= to_string(i)+ " sheep...";}
// return s;
// }
    // method 2:
// std::string countSheep(int number) {
//     string s;
//     stringstream ss;
//     //start from 1 =49 (hexa)
//     for (int i = 1; i <= number; i++)
//     {
//         ss << i;
//         s += ss.str() + " sheep...";
//         ss.str("");
//     }
//     return s;
// }
    //method 3:
//i test on 302 as input to convert to word
/*
----- number is 3 digit
302/(10^2)=302/100=3.02=3  //call it digit and push 
302-(10^2)*3=302-100*3=02 =2
----- now num is 2 digit --------- so decrement >> 10^(?-1)

2/10=0.2=0 //call it digit and push 
2-10*0=2 
----- now num is 1 digit --------- so decrement >> 10^(?-1)

2/1=2      //call it digit and push 
2-1*0=2     // end loop 
*/
int tenPowerFn(int n) //to get 10^?  ? refer to tenpower
{
  int tenPower=0;
    while (n>=10)
  {
    n=n/10;
    tenPower++;
  }
return tenPower;
}
string convertToString(int ntoConvert)
{
  string out="";
  int temp_n=ntoConvert;
  int tenPower=tenPowerFn(ntoConvert);
  int numOfDigits=tenPower;
    for (int i=0; i<=numOfDigits;i++)
    {
      int digit =temp_n/floor( (pow(10,tenPower)));//302/100=3  //2/10=0.2=0  //2/1=2
      out+=char(digit+48);                          // '3'      //'0'         //'2'
      temp_n=temp_n-floor(pow(10,tenPower--)) *digit;         //302-100*3=2  //2-10*0=2
    }
  return out;
}
string countSheep(int number)
{
  string str="";
  for (int j=1;j<=number;j++)
  {
      str=str + convertToString(j)+" sheep...";
  }
return str;
}

int main() {
  cout<<countSheep(50)<<"\n";    
   return 0;
}
