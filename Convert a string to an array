#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <cassert>
#include <string>
#include <algorithm>
#include <cstring>
#include <stdio.h>
#include <vector>
#include <regex>
#include <string>
#include <numeric>
#include <stdlib.h>
#include <map>
#include <numeric>
#include<sstream>
#include <set>
 using namespace std;
    //method 1:
// std::vector<std::string> string_to_array(const std::string& s) {
//     vector<string> vec;
//     string my_string;
//     stringstream ss(s);
//     int emptySpaceCountr=0;
//     for (char c:s)
//     {if (c==' ') emptySpaceCountr++;}
    
//     for ( int i=0;i<=emptySpaceCountr;i++)
//     {
//       ss>>my_string;
//       vec.push_back(my_string);
//       my_string.clear();
//     }
//     // for (string v:vec)
//     // {
//     //   cout<<v<<" ";
//     // }
// return vec;
// }
//     method 2:
std::vector<std::string> string_to_array(const std::string& s) {
    vector<string> vec;
    string my_string;
    stringstream ss(s);
    while (ss >> my_string) vec.push_back(my_string);   
    /*
    methode 3
    while (getline(stream, word, ' ')) {res.push_back(word);}
    */ 
return vec;
}
    //method 4:
// std::vector<std::string> string_to_array(const std::string& s) {
//     vector<string> vec;
//     int size=s.size();
//     string my_string="";
//     for (char c:s)
//     {
//       // cout<<my_string<<" ";
//       if (c!=' ' ) {
//         my_string+=c;
//       }
//       else 
//       {
//         vec.push_back(my_string);
//         my_string.clear();      
//       }
//     }
//     vec.push_back(my_string);
//     for (string v:vec)
//     {
//       cout<<v<<" ";
//     }
// return vec;
// }
int main() {
  
    // vector<int>vvv{ 1, 1, 11, 2, 3  };
    // vector<int>vvv {-6 ,-1 ,10 ,-12};
    string str="Robin Singh";
    string_to_array(str);
    
   return 0;
}
