#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <cassert>
#include <string>
#include <algorithm>
#include <cstring>
#include <stdio.h>
#include <vector>
#include <regex>
#include <string>
#include <numeric>
#include <stdlib.h>
#include <map>
#include <numeric>
#include<sstream>
#include <set>
using namespace std;
      //methode 1
bool is_even(double n)
{
  // it fail in fixed  test if i used int x=floor(n)
    long  x=floor(n);  // it fail in random tes if using  long x=n 
 if(n>x) return false;
  (x>=0)? x:x=-1*x;  
  (x>=0)? x:-x;
  return  (x%2==0)? true :false;
}
     //methode 2
bool is_even(double n)
{
    return fmod(n, 2) == 0;
}
     //methode 3
bool is_even(double n)
{
    if(ceil(n) != floor(n)) return false;
    return ((int)n)%2 == 0;
}
     //methode 4
bool is_even(double n)
{
    return !(n - (long long)(n * 0.5) * 2.0);
}
     //methode 5
bool is_even(double n)
{
  long long x = static_cast<long long>(n);
  if(std::abs(n - x) > 0)
    return false;
    return !(x%2);
}
     //methode 6
bool is_even(double n)
{
    string numChar = to_string(n);
    int indexDot = 0;
    for (int i = 0; i < numChar.size(); i++)
    {
        if (numChar[i] == '.')
        {
            indexDot = i;
            cout << indexDot << " ";
        }
    }
    if (numChar[indexDot + 1] <= '0')
    {
        if (int(n) % 2 == 0 || int(n) == 0)
        {
            return true;
        }
    }
    return false;
}
